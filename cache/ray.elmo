Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _A = _N.Array.make(_elm),
   _E = _N.Error.make(_elm),
   $moduleName = "Main";
   var Array = Elm.Array.make(_elm);
   var Basics = Elm.Basics.make(_elm);
   var Color = Elm.Color.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Collage = Elm.Graphics.Collage.make(_elm);
   var Graphics = Graphics || {};
   Graphics.Element = Elm.Graphics.Element.make(_elm);
   var List = Elm.List.make(_elm);
   var Maybe = Elm.Maybe.make(_elm);
   var Native = Native || {};
   Native.Json = Elm.Native.Json.make(_elm);
   var Native = Native || {};
   Native.Ports = Elm.Native.Ports.make(_elm);
   var Signal = Elm.Signal.make(_elm);
   var String = Elm.String.make(_elm);
   var Text = Elm.Text.make(_elm);
   var Time = Elm.Time.make(_elm);
   var Vector = Elm.Vector.make(_elm);
   var _op = {};
   var height = 600;
   var width = 800;
   var lightPos = {ctor: "_Tuple3"
                  ,_0: 100
                  ,_1: 100
                  ,_2: 0};
   var ballR = 150;
   var ballZ = 300;
   var clipMax = 1000;
   var clipMin = 100;
   var shine = function (x) {
      return _U.cmp(x,
      0.97) > 0 ? 1 : _U.cmp(x,
      0.93) > 0 ? 0.9 : _U.cmp(x,
      0.8) > 0 ? 0.8 : _U.cmp(x,
      0.5) > 0 ? 0.6 : _U.cmp(x,
      0.2) > 0 ? 0.4 : _U.cmp(x,
      0.1) > 0 ? 0.3 : 0.2;
   };
   var rayDistance = function (d) {
      return Basics.sqrt(ballZ * ballZ - d * d) - Basics.sqrt(ballR * ballR - d * d);
   };
   var shade = F2(function (d,i) {
      return function () {
         var ray = A2(Vector.mul,
         rayDistance(d),
         i);
         var lightRelPos = A2(Vector.sub,
         lightPos,
         ray);
         var lightRelPosUnit = Vector.unit(lightRelPos);
         var sphereNormal = Vector.unit(A2(Vector.sub,
         ray,
         {ctor: "_Tuple3"
         ,_0: 0
         ,_1: 0
         ,_2: ballZ}));
         var ilum = A2(Vector.dot,
         lightRelPosUnit,
         sphereNormal);
         return 0.4 * shine(ilum) + 0.4 * ilum + 0.2;
      }();
   });
   var ray = function (_v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return Vector.unit({ctor: "_Tuple3"
                               ,_0: Basics.toFloat(_v0._0)
                               ,_1: Basics.toFloat(_v0._1)
                               ,_2: clipMin});}
         _E.Case($moduleName,
         "on line 33, column 14 to 61");
      }();
   };
   var rayTrace = function (_v4) {
      return function () {
         switch (_v4.ctor)
         {case "_Tuple3":
            return function () {
                 var ballPos = {ctor: "_Tuple3"
                               ,_0: 0
                               ,_1: 0
                               ,_2: ballZ};
                 var dot = A2(Vector.dot,
                 ballPos,
                 ray({ctor: "_Tuple2"
                     ,_0: _v4._0
                     ,_1: _v4._1}));
                 var d = Basics.sqrt(ballZ * ballZ - dot * dot);
                 return _U.cmp(d,
                 ballR) > 0 ? {ctor: "_Tuple3"
                              ,_0: _v4._0
                              ,_1: _v4._1
                              ,_2: 0} : {ctor: "_Tuple3"
                                        ,_0: _v4._0
                                        ,_1: _v4._1
                                        ,_2: A2(shade,
                                        d,
                                        ray({ctor: "_Tuple2"
                                            ,_0: _v4._0
                                            ,_1: _v4._1}))};
              }();}
         _E.Case($moduleName,
         "between lines 41 and 45");
      }();
   };
   var drawPoint = function (_v9) {
      return function () {
         switch (_v9.ctor)
         {case "_Tuple3":
            return Graphics.Collage.move({ctor: "_Tuple2"
                                         ,_0: Basics.toFloat(_v9._0)
                                         ,_1: Basics.toFloat(_v9._1)})(Graphics.Collage.filled(Color.greyscale(1 - _v9._2))(Graphics.Collage.square(2)));}
         _E.Case($moduleName,
         "between lines 9 and 11");
      }();
   };
   var screen = F2(function (w,h) {
      return function () {
         var div = F2(function (x,y) {
            return Basics.floor(Basics.toFloat(x) / Basics.toFloat(y));
         });
         var half = function (x) {
            return Basics.floor(Basics.toFloat(x) / 2);
         };
         var array = A2(Array.initialize,
         h * w,
         function (n) {
            return {ctor: "_Tuple3"
                   ,_0: A2(Basics.rem,
                   n,
                   w) - half(w)
                   ,_1: half(h) - A2(div,n,h)
                   ,_2: 0};
         });
         return Array.toList(Array.map(drawPoint)(A2(Array.map,
         rayTrace,
         array)));
      }();
   });
   var main = A3(Graphics.Collage.collage,
   width,
   height,
   A2(screen,width,height));
   _elm.Main.values = {_op: _op
                      ,drawPoint: drawPoint
                      ,screen: screen
                      ,ray: ray
                      ,rayTrace: rayTrace
                      ,rayDistance: rayDistance
                      ,shade: shade
                      ,shine: shine
                      ,clipMin: clipMin
                      ,clipMax: clipMax
                      ,ballZ: ballZ
                      ,ballR: ballR
                      ,lightPos: lightPos
                      ,width: width
                      ,height: height
                      ,main: main};
   return _elm.Main.values;
};